server:
  port: 8888

spring:
  profiles:
    active: git # default git, other i.e. git, vault (you can activate multiple profiles for git and vault and native location funcationality ). 
  cloud:  
    bus:
      # Workaround for defect in https://github.com/spring-cloud/spring-cloud-bus/issues/124 bus id must be unquie, otherwise events will be discard
      id: ${vcap.application.name:${spring.application.name:application}}:${vcap.application.instance_index:${spring.profiles.active:${local.server.port:${server.port:0}}}}:${vcap.application.instance_id:${random.value}}
      # Bydefault, spring.cloud.bus.enabled is set to true. 
      enabled: true
      # Optional for Spring Cloud Bus Tracing
      trace:
        enabled: true
    # Configuration server configuration for github & local
    config:
      server:
        vault:
          host: localhost # (default localhost)
          port: 8200      # (default 8200)
          scheme: https
          authentication: token  #(default token. others i.e. AWS_EC2)
          token: your_vault_token #(optional, mandatory incase of token based authentication)
        # Git Repo Configuration
        git:
          uri: https://github.com/zubekhan/cloudtut
          searchPaths: 
            - 'default*'
          repos:   # add secondry repos which are identified using pattern
            prod:
              uri: https://github.com/zubekhan/cloudtut
              pattern:
                - '*/prod'
              searchPaths:
                - 'production*'
                - 'production/*'
            preprod:
              uri: https://github.com/zubekhan/cloudtut
              pattern:
                - '*/preprod'
              searchPaths:
                - 'pre-production*'
                - 'pre-production/*'
            stage:
              uri: https://github.com/zubekhan/cloudtut
              pattern:
                - '*/stage'
              searchPaths:
                - 'stagging*'
                - 'stagging/*'
            test:
              uri: https://github.com/zubekhan/cloudtut
              pattern:
                - '*/test'
              searchPaths:
                - 'testing*'
                - 'testing/*'
            dev:
              uri: https://github.com/zubekhan/cloudtut
              pattern:
                - '*/dev'
              searchPaths:
                - 'development*'
                - 'development/*'
            local:
              uri: file:/Users/a1fomuck/development-environment/backend-workspace/eclipse-workspace/microservice-workspace/cloud-configuration/cloudtut
              pattern:
                - '*/local'
              searchPaths:
                - 'local*'
                - 'local/*'        
          # For Secured Git Repository
          #username: #Enter Git UserName
          #password: #Enter Git Password
              
  # For spring Cloud Security     
  security:
    user:
      name: cloudtut
      password: securedpassword
  
  # For Spring Cloud Bus
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
      
  # For Logging Purpose    
logging:
  level:
    ROOT: INFO
    #org.springframework.cloud.config: DEBUG
    #org.springframework.cloud.bus: TRACE

  # To Enable Endpoints,  i.e. bus-refresh
management:
  endpoints:
    web:
      exposure:
        include:
        - '*'
        
# Eureka Server Cluster Ports
cloud:
  peers:
    default: 8760
    port1: 8761
    port2: 8762
    port3: 8763
    port4: 8764
    
# Eureka Client Configuration    
eureka:
  client:
    serviceUrl:
      defaultZone: http://eureka-peer1:${cloud.peers.port1}/eureka/,http://eureka-peer2:${cloud.peers.port2}/eureka/,http://eureka-peer3:${cloud.peers.port3}/eureka/,http://eureka-peer4:${cloud.peers.port4}/eureka/
  instance:  #instance id is the unique id used by eureka server to differentiate an instance among other instances of a service
    instanceId: ${spring.cloud.client.hostname}:${spring.application.name}:${spring.application.instance_id:${server.port}}
    
    